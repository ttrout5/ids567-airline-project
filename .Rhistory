skynet()
install.packages("skynet")
library(skynet)
install.packages("skynet")
install.packages("Rtools")
install.packages("skynet")
install.packages("remotes")
remotes::install_github("skynet-r/skynet")
remotes::install_github("skynet-r/skynet")
remotes::install_github("ropensci/skynet")
# Install these if you don't already have them
install.packages(c("httr", "readr"))
library(httr)
library(readr)
# Example: 2019 February On-Time Performance data
url <- "https://transtats.bts.gov/PREZIP/On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2019_2.zip"
# Temporary file for the download
temp <- tempfile(fileext = ".zip")
# Download the ZIP
GET(url, write_disk(temp, overwrite = TRUE))
# Unzip into temp directory
unzip_dir <- tempdir()
unzip(temp, exdir = unzip_dir)
# Find the CSV file inside
csv_file <- list.files(unzip_dir, pattern = "\\.csv$", full.names = TRUE)
# Read the data
flights <- read_csv(csv_file)
# Check dimensions
dim(flights)
head(flights)
colnames()
View(flights)
View(flights)
rm(list = ls())
# Install needed packages if not already installed
install.packages(c("httr", "readr", "dplyr", "arrow"))
library(httr)
library(readr)
library(dplyr)
library(arrow)
install.packages("arrow")
library("arrow")
# Install needed packages if not already installed
install.packages(c("httr", "readr", "dplyr", "arrow"))
library(httr)
library(readr)
library(dplyr)
library(arrow)
# Function to build URL for given year & month
make_url <- function(year, month) {
paste0(
"https://transtats.bts.gov/PREZIP/On_Time_Reporting_Carrier_On_Time_Performance_1987_present_",
year, "_", month, ".zip"
)
}
# Download and read one month of data
download_month <- function(year, month) {
url <- make_url(year, month)
message("📥 Downloading data for ", month.name[month], " ", year, "...")
temp <- tempfile(fileext = ".zip")
res <- GET(url, write_disk(temp, overwrite = TRUE))
if (res$status_code != 200) {
warning(paste("⚠️ Failed to download:", url))
return(NULL)
}
unzip_dir <- tempdir()
unzip(temp, exdir = unzip_dir)
csv_file <- list.files(unzip_dir, pattern = "\\.csv$", full.names = TRUE)
if (length(csv_file) == 0) {
warning(paste("⚠️ No CSV found in:", url))
return(NULL)
}
message("✅ Successfully loaded ", month.name[month], " ", year)
read_csv(csv_file, show_col_types = FALSE)
}
# Loop over Jan–Dec 2024 with progress output
all_2024 <- lapply(1:12, function(m) download_month(2024, m))
install.packages("pkgbuild")
library(pkgbuild)
has_rtools()
Sys.which("make")
Sys.which("make")
Sys.which("make")
$env:Path
Sys.which("make")
Sys.getenv("PATH")
Sys.which("make")
Sys.which("gcc")
install.packages("pkgbuild")
install.packages("duckdb")
library(duckdb)
# Connect to DuckDB database
con <- dbConnect(duckdb::duckdb(), dbdir = "bts.duckdb", read_only = FALSE)
# List all tables in the database
tables <- dbListTables(con)
# Load CSV file
# Path to your CSV
csv_file <- "C:/Users/trout/OneDrive/Documents/UIC MSBA/Fall 2025/IDS 567/Project/On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2024_1.zip/On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2024_1.csv"
dbExecute(con, paste0("CREATE TABLE IF NOT EXISTS bts_data AS SELECT * FROM read_csv_auto('", csv_file, "')"))
query <- paste0("
SELECT airline, COUNT(*) AS num_flights
FROM read_csv_auto('", csv_file, "')
GROUP BY airline
ORDER BY num_flights DESC
")
result <- dbGetQuery(con, query)
# Load CSV file
# Path to your CSV
csv_file <- "C:/Users/trout/OneDrive/Documents/UIC MSBA/Fall 2025/IDS 567/C:\Users\trout\OneDrive\Documents\UIC MSBA\Fall 2025\IDS 567\Project\On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2024_1/On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2024_1.csv"
# Load CSV file
csv_file <- "C:/Users/trout/OneDrive/Documents/UIC MSBA/Fall 2025/IDS 567/Project/On_Time_Reporting_Carrier_On_Time_Performance_1987_present_2024_1/On_Time_Reporting_Carrier_On_Time_Performance_(1987_present)_2024_1"  # Replace with your actual CSV file path
query <- paste0("
SELECT airline, COUNT(*) AS num_flights
FROM read_csv_auto('", csv_file, "')
GROUP BY airline
ORDER BY num_flights DESC
")
result <- dbGetQuery(con, query)
clear
esc
rm(list = ls())
getwd()
my_data <- read.csv("bts_airline_data_2024.csv", header = TRUE)
View(my_data)
View(my_data)
